name: Backend CI (in-memory)

on:
  push:
    paths:
      - 'backend/**'
      - 'src/**'
      - 'backend/tests/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - 'src/**'
      - 'backend/tests/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  # ---- In-memory baseline (må forbli grønn) ----
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend deps (lock-aware)
        run: |
          if [ -f package-lock.json ]; then
            echo "backend/package-lock.json finnes → npm ci"
            npm ci --omit=optional --no-audit --fund=false
          else
            echo "Ingen backend/package-lock.json → npm install"
            npm install --no-audit --fund=false
          fi

      - name: Run in-memory API smoke tests
        env:
          FF_PERSISTENCE: 'false'
        run: |
          npm test -- \
            tests/features/active.api.test.ts \
            tests/usage/usage.api.test.ts \
            --runInBand --passWithNoTests

  # ---- Postgres/persistence jobb (FF_PERSISTENCE=true) ----
  test-persistence:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: workbuoy
        options: >-
          --health-cmd "pg_isready -U postgres -d workbuoy"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      FF_PERSISTENCE: 'true'
      # standard URL som Prisma/klienter forventer
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/workbuoy?schema=public

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Root verktøy (lint-scripts osv.) hvis lock finnes, ellers fall-back
      - name: Install root deps (lock-aware)
        run: |
          if [ -f package-lock.json ]; then
            echo "root/package-lock.json finnes → npm ci"
            npm ci --omit=optional --no-audit --fund=false
          else
            echo "Ingen root/package-lock.json → npm install"
            npm install --no-audit --fund=false
          fi

      # Backend deps – sjekk backend/package-lock.json spesifikt
      - name: Install backend deps (lock-aware)
        run: |
          if [ -f backend/package-lock.json ]; then
            echo "backend/package-lock.json finnes → npm ci --prefix backend"
            npm ci --prefix backend --omit=optional --no-audit --fund=false
          else
            echo "Ingen backend/package-lock.json → npm install --prefix backend"
            npm install --prefix backend --no-audit --fund=false
          fi

      # Prisma generering/migrering kjøres fra repo-rot mot prisma/schema.prisma
      - name: Generate Prisma client
        run: npx prisma generate --schema=prisma/schema.prisma

      - name: Apply Prisma migrations
        run: npx prisma migrate deploy --schema=prisma/schema.prisma

      # Seed roller fra roles/roles.json via ESM loader
      - name: Seed baseline roles
        run: node --loader ts-node/esm scripts/seed-roles-from-json.ts

      # Kjør persistens-testene med egen jest-config
      - name: Run persistence tests
        working-directory: backend
        run: |
          npx jest --config jest.persistence.config.cjs --runInBand --passWithNoTests
