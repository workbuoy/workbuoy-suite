name: backend-ci
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: workbuoy
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      CI: "true"
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/workbuoy
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Force clean npm config
        run: |
          echo "registry=https://registry.npmjs.org/" > ~/.npmrc
          npm config set fund false
          npm config set audit false
          npm config get registry

      - name: Install root dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: Install dependencies
        working-directory: backend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: Apply Prisma migrations
        run: npx prisma migrate deploy

      - name: Run tests (FF_PERSISTENCE=false)
        run: FF_PERSISTENCE=false npm test

      - name: Run tests (FF_PERSISTENCE=true)
        run: FF_PERSISTENCE=true npm test
