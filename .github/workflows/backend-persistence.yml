name: Backend Persistence CI

on:
  push:
    paths:
      - 'apps/backend/**'
      - 'prisma/**'
      - 'core/roles/**'
      - 'scripts/seed-roles-from-json.ts'
      - 'scripts/seed-roles-lib.ts'
      - 'scripts/roles-io.ts'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'apps/backend/**'
      - 'prisma/**'
      - 'core/roles/**'
      - 'scripts/seed-roles-from-json.ts'
      - 'scripts/seed-roles-lib.ts'
      - 'scripts/roles-io.ts'
      - '.github/workflows/**'

jobs:
  backend-persistence:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wb
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    env:
      FF_PERSISTENCE: 'true'
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wb?schema=public
      ROLES_PATH: scripts/fixtures/minimal-roles.json
      FEATURES_PATH: scripts/fixtures/minimal-features.json
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install workspaces
        run: npm install --workspaces --include-workspace-root --no-audit --fund=false

      - name: Generate Prisma client
        env:
          PRISMA_CLI_QUERY_ENGINE_TYPE: binary
        run: npx --yes -p prisma@6.16.2 prisma generate --schema=apps/backend/prisma/schema.prisma

      - name: Apply Prisma migrations
        env:
          PRISMA_CLI_QUERY_ENGINE_TYPE: binary
        run: npx --yes -p prisma@6.16.2 prisma migrate deploy --schema=apps/backend/prisma/schema.prisma

      - name: Seed baseline roles/features
        timeout-minutes: 10
        env:
          FF_PERSISTENCE: true
          DATABASE_URL: ${{ secrets.DATABASE_URL != '' && secrets.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/wb?schema=public' }}
          ROLES_PATH: scripts/fixtures/minimal-roles.json
          FEATURES_PATH: scripts/fixtures/minimal-features.json
        run: npm run seed:roles -w @workbuoy/backend

      - name: Run persistence tests
        env:
          FF_PERSISTENCE: true
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npm run test -w @workbuoy/backend -- --runInBand --passWithNoTests --detectOpenHandles
