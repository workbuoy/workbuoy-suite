name: Backend CI (persistence)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test-persistence:
    if: "!contains(github.event.head_commit.message, '[skip ci]')" # still allow skipping
    runs-on: ubuntu-latest
    env:
      FF_PERSISTENCE: 'true'
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/workbuoy?schema=public
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: workbuoy
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install root tooling deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci --omit=optional --no-audit --fund=false
          else
            npm install --no-audit --fund=false
          fi

      - name: Install backend deps
        run: |
          if [ -f backend/package-lock.json ]; then
            npm ci --prefix backend --omit=optional --no-audit --fund=false
          else
            npm install --prefix backend --no-audit --fund=false
          fi

      - name: Generate Prisma client
        working-directory: backend
        run: npx prisma generate --schema=prisma/schema.prisma

      - name: Apply Prisma migrations
        working-directory: backend
        run: npx prisma migrate deploy --schema=prisma/schema.prisma

      - name: Seed baseline roles
        run: |
          npm --prefix backend install --no-audit --fund=false
          npm --prefix backend exec tsx ../scripts/seed-roles-from-json.ts

      - name: Run persistence tests
        working-directory: backend
        run: npx jest --config jest.persistence.config.cjs --runInBand --passWithNoTests
