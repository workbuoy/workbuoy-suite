name: backend-persistence

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend_related: ${{ steps.compute.outputs.backend_related }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            prisma:
              - 'prisma/**'
            roles:
              - 'core/roles/**'
              - 'scripts/seed-roles-from-json.ts'
            frontend:
              - 'frontend/**'
            docs:
              - 'docs/**'
      - name: compute backend_related
        id: compute
        run: |
          if [ "${{ steps.filter.outputs.backend }}" = "true" ] || \
             [ "${{ steps.filter.outputs.prisma }}" = "true" ] || \
             [ "${{ steps.filter.outputs.roles }}" = "true" ]; then
            echo "backend_related=true" >> $GITHUB_OUTPUT
          else
            echo "backend_related=false" >> $GITHUB_OUTPUT
          fi

  backend-persistence:
    needs: changes
    # ðŸ‘‡ Skip nÃ¥r PR ikke berÃ¸rer backend/prisma/roles (typisk frontend/docs)
    if: needs.changes.outputs.backend_related == 'true'
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wb
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      FF_PERSISTENCE: "true"
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wb?schema=public
      ROLES_PATH: core/roles/roles.json
      FEATURES_PATH: core/roles/features.json
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm --prefix backend install
      - run: npx prisma generate --schema=prisma/schema.prisma
      - run: npm run seed:roles
