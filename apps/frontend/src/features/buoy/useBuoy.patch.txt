--- a/frontend/src/features/buoy/useBuoy.ts
+++ b/frontend/src/features/buoy/useBuoy.ts
@@
-import { useState } from "react";
-import type { UserMessage, AssistantMessage } from "./types";
+import { useState } from "react";
+import type { UserMessage, AssistantMessage } from "./types";
+import type { ParsedIntent } from "./commandParser";
@@
-export function useBuoy() {
+export function useBuoy() {
@@
-  async function send(text: string) {
+  async function send(text: string, intent?: ParsedIntent) {
     const userMsg: UserMessage = { id: crypto.randomUUID(), role:"user", text };
     setMessages(m => [...m, userMsg]);
@@
-      text: "Her er et forslag basert på meldingen din.",
+      text: intent?.kind && intent.kind!=="unknown"
+        ? `Forstod intent «${intent.kind}». (Stub-respons)`
+        : "Her er et forslag basert på meldingen din.",
       why: ["Kilde: demo-datasett", "Mønster: stub response"],
       viz: { type:"spark", values:[1,3,2,5,4] },
       actions: [{ id:"1", label:"Godkjenn forslag" }]
     };
     setTimeout(()=> setMessages(m=>[...m, a]), 400);
   }
@@
-  return { messages, send };
+  return { messages, send };
 }