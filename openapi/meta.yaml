openapi: 3.0.3
info:
  title: WorkBuoy META API
  version: 1.0.0
  description: Introspection & platform health endpoints.
servers:
  - url: /api
tags:
  - name: meta
paths:
  /meta/health:
    get:
      operationId: getMetaHealth
      tags: [meta]
      summary: Liveness / basic health
      responses:
        '200':
          description: Health response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/HealthResponse' }
      security: []
  /meta/readiness:
    get:
      operationId: getMetaReadiness
      tags: [meta]
      summary: Readiness checks
      parameters:
        - in: query
          name: include
          schema:
            type: array
            items: { type: string }
          style: form
          explode: false
          description: Comma-separated list of check names to include.
      responses:
        '200':
          description: Readiness response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ReadinessResponse' }
  /meta/version:
    get:
      operationId: getMetaVersion
      tags: [meta]
      summary: Build & version info
      responses:
        '200':
          description: Version response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/VersionResponse' }
      security: []
  /meta/capabilities:
    get:
      operationId: getMetaCapabilities
      tags: [meta]
      summary: Capability toggles and availability snapshot
      responses:
        '200':
          description: Capabilities response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/CapabilitiesResponse' }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthResponse:
      type: object
      required: [status, uptime_s, git_sha, started_at]
      properties:
        status: { type: string, enum: [ok, degraded, down] }
        uptime_s: { type: number }
        git_sha: { type: string, minLength: 3 }
        build_id: { type: string }
        started_at: { type: string, format: date-time }
    ReadinessResponse:
      type: object
      required: [status, checks]
      properties:
        status: { type: string, enum: [ready, degraded, not_ready] }
        checks:
          type: array
          items:
            $ref: '#/components/schemas/ReadinessCheck'
    ReadinessCheck:
      type: object
      required: [name, status, latency_ms]
      properties:
        name: { type: string }
        status: { type: string, enum: [ok, fail, warn] }
        latency_ms: { type: number }
        reason: { type: string }
    VersionResponse:
      type: object
      required: [semver, git_sha, built_at]
      properties:
        semver: { type: string }
        git_sha: { type: string }
        built_at: { type: string, format: date-time }
        commit_time: { type: string, format: date-time }
    ConnectorCapability:
      type: object
      required: [name, enabled]
      properties:
        name: { type: string }
        enabled: { type: boolean }
    CapabilitiesResponse:
      type: object
      required: [modes, connectors, feature_flags]
      properties:
        modes:
          type: object
          required: [core, flex, secure]
          properties:
            core: { type: boolean }
            flex: { type: boolean }
            secure: { type: boolean }
        connectors:
          type: array
          items: { $ref: '#/components/schemas/ConnectorCapability' }
        feature_flags:
          type: object
          additionalProperties: { type: boolean }
security:
  - bearerAuth: []
