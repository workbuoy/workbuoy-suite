openapi: 3.0.3
info:
  title: Workbuoy Tasks API
  version: "0.1.0"
  description: Autogenerated spec aligned with current in-memory APIs.
servers:
  - url: /
paths:
    /api/tasks:
      get:
        summary: List tasks
        operationId: listTasks
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: array
                      items: { $ref: '#/components/schemas/Task' }
      post:
        summary: Create task
        operationId: createTask
        requestBody:
          required: true
          content:
            application/json:
              schema: { $ref: '#/components/schemas/TaskCreate' }
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema: { $ref: '#/components/schemas/Task' }
          '403':
            description: Forbidden
            content:
              application/json:
                schema: { $ref: '#/components/schemas/ErrorWithExplanations' }
    /api/tasks/{id}:
      patch:
        summary: Update task
        operationId: updateTask
        parameters:
          - in: path
            name: id
            required: true
            schema: { type: string }
        requestBody:
          required: true
          content:
            application/json:
              schema: { $ref: '#/components/schemas/TaskUpdate' }
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema: { $ref: '#/components/schemas/Task' }
          '404': { description: Not Found }
          '403':
            description: Forbidden
            content:
              application/json:
                schema: { $ref: '#/components/schemas/ErrorWithExplanations' }
      delete:
        summary: Delete task
        operationId: deleteTask
        parameters:
          - in: path
            name: id
            required: true
            schema: { type: string }
        responses:
          '204': { description: No Content }
          '404': { description: Not Found }
          '403':
            description: Forbidden
            content:
              application/json:
                schema: { $ref: '#/components/schemas/ErrorWithExplanations' }
  components:
    schemas:
      Task:
        type: object
        properties:
          id: { type: string }
          title: { type: string }
          status: { type: string, enum: ['todo','doing','done'] }
          assignee: { type: string, nullable: true }
          dueDate: { type: string, nullable: true }
          createdAt: { type: string, format: date-time }
        required: [id, title, status, createdAt]
      TaskCreate:
        type: object
        properties:
          title: { type: string }
          status: { type: string, enum: ['todo','doing','done'], default: 'todo' }
          assignee: { type: string, nullable: true }
          dueDate: { type: string, nullable: true }
        required: [title]
      TaskUpdate:
        type: object
        properties:
          title: { type: string }
          status: { type: string, enum: ['todo','doing','done'] }
          assignee: { type: string, nullable: true }
          dueDate: { type: string, nullable: true }
      ErrorWithExplanations:
        type: object
        properties:
          error:
            type: object
            properties:
              code: { type: string }
              message: { type: string }
              explanations:
                type: array
                items: { $ref: '#/components/schemas/Explanation' }
      Explanation:
        type: object
        properties:
          reasoning: { type: string }
          policyBasis: { type: string }
          confidence: { type: number }
