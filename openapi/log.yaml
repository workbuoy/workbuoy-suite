openapi: 3.0.3
info:
  title: Workbuoy Log API
  version: "0.1.0"
  description: Autogenerated spec aligned with current in-memory APIs.
servers:
  - url: /
paths:
    /api/logs:
      get:
        summary: List logs
        operationId: listLogs
        parameters:
          - in: query
            name: limit
            schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: array
                      items: { $ref: '#/components/schemas/LogEntry' }
      post:
        summary: Append log entry
        operationId: appendLog
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  level: { type: string, enum: ['info','warn','error','debug'], default: 'info' }
                  message: { type: string }
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema: { $ref: '#/components/schemas/LogEntry' }
          '403':
            description: Forbidden
            content:
              application/json:
                schema: { $ref: '#/components/schemas/ErrorWithExplanations' }
    /api/audit/verify:
      get:
        summary: Verify audit hash chain
        operationId: verifyAudit
        responses:
          '200': { description: OK }
          '500': { description: Verification failed }
  components:
    schemas:
      LogEntry:
        type: object
        properties:
          id: { type: string }
          ts: { type: string, format: date-time }
          level: { type: string }
          message: { type: string }
          correlationId: { type: string, nullable: true }
      ErrorWithExplanations:
        type: object
        properties:
          error:
            type: object
            properties:
              code: { type: string }
              message: { type: string }
              explanations:
                type: array
                items:
                  type: object
                  properties:
                    reasoning: { type: string }
                    policyBasis: { type: string }
                    confidence: { type: number }
