openapi: 3.0.3
info:
  title: Workbuoy CRM API
  version: "0.1.0"
  description: Autogenerated spec aligned with current in-memory APIs.
servers:
  - url: /
paths:
    /api/crm/contacts:
      get:
        summary: List contacts
        operationId: listContacts
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Contact'
      post:
        summary: Create contact
        operationId: createContact
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCreate'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Contact'
          '403':
            description: Forbidden (policy)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorWithExplanations'
    /api/crm/contacts/{id}:
      delete:
        summary: Delete contact
        operationId: deleteContact
        parameters:
          - in: path
            name: id
            required: true
            schema: { type: string }
        responses:
          '204': { description: No Content }
          '404':
            description: Not Found
            content:
              application/json:
                schema: { $ref: '#/components/schemas/Error' }
          '403':
            description: Forbidden (policy)
            content:
              application/json:
                schema: { $ref: '#/components/schemas/ErrorWithExplanations' }
  components:
    schemas:
      Contact:
        type: object
        properties:
          id: { type: string }
          name: { type: string }
          email: { type: string, nullable: true }
          phone: { type: string, nullable: true }
          createdAt: { type: string, format: date-time }
        required: [id, name, createdAt]
      ContactCreate:
        type: object
        properties:
          name: { type: string }
          email: { type: string, nullable: true }
          phone: { type: string, nullable: true }
        required: [name]
      Error:
        type: object
        properties:
          error:
            type: object
            properties:
              code: { type: string }
              message: { type: string }
      ErrorWithExplanations:
        allOf:
          - $ref: '#/components/schemas/Error'
          - type: object
            properties:
              error:
                type: object
                properties:
                  explanations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Explanation'
      Explanation:
        type: object
        properties:
          reasoning: { type: string }
          policyBasis: { type: string }
          confidence: { type: number }
          impact:
            type: object
            properties:
              minutesSaved: { type: number }
              dsoDeltaDays: { type: number }
