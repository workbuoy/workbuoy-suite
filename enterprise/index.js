import path from 'path';import sqlite3 from 'sqlite3';import { topK } from './ranker.js';import { generate } from './provider.js';import { WB_AI_ENABLED, WB_AI_CANARY_PERCENT, WB_AI_KB_VERSION } from '../config/ai-flags.js';import { aiReqByTenant, aiErrByTenant, aiLatencyP95ByTenant } from '../metrics/registry.js';const DB_PATH=process.env.DB_PATH||path.join(process.cwd(),'db','workbuoy.db');function ver(tenant){if(WB_AI_CANARY_PERCENT>0&&tenant){let h=0;for(const ch of tenant)h=(h*31+ch.charCodeAt(0))>>>0;const pct=h%100;if(pct<WB_AI_CANARY_PERCENT)return WB_AI_KB_VERSION;}return WB_AI_KB_VERSION;}export async function ask({tenant_id,prompt,surface='portal',user_goal}){if(!WB_AI_ENABLED)return{ text:'AI er ikke aktivert.', meta:{disabled:true}};const started=Date.now();try{aiReqByTenant.labels(tenant_id||'enterprise',surface).inc();const db=new sqlite3.Database(DB_PATH);const docs=await new Promise(r=>db.all(`SELECT id,tenant_id,version,tags,title,content FROM kb_documents WHERE (tenant_id=? OR tenant_id IS NULL) AND version=? AND active=1`,[tenant_id,ver(tenant_id)],(e,rows)=>r(rows||[])));const top=topK(prompt,docs,4);const resp=await generate({prompt,context:top,user_goal});const ms=Date.now()-started;aiLatencyP95ByTenant.labels(tenant_id||'enterprise',surface).set(ms);return { text:resp.text, citations:top.map(d=>({id:d.id,title:d.title})), meta:{ms,version:ver(tenant_id)} };}catch(e){aiErrByTenant.labels(tenant_id||'enterprise',surface).inc();return { text:'Beklager, noe gikk galt.', error:String(e) };}}