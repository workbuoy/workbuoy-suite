import path from 'path';import sqlite3 from 'sqlite3';import { resolveTenantId } from '../../../lib/middleware/tenant.js';import { aiUsefulTotal, aiNotUsefulTotal } from '../../../lib/metrics/registry.js';const DB_PATH=process.env.DB_PATH||path.join(process.cwd(),'db','workbuoy.db');export default function handler(req,res){if(req.method!=='POST')return res.status(405).json({error:'method_not_allowed'});const tenant_id=resolveTenantId(req);const {surface='portal',prompt='',response_id='',useful=null,comment=''}=req.body||{};const db=new sqlite3.Database(DB_PATH);db.run(`INSERT INTO ai_feedback(tenant_id,surface,prompt,response_id,useful,comment) VALUES(?,?,?,?,?,?)`,[tenant_id,surface,String(prompt||''),String(response_id||''),useful===true?1:useful===false?0:null,String(comment||'')],(err)=>{if(err)return res.status(500).json({error:'db_error'});if(useful===true)aiUsefulTotal.labels(tenant_id||'enterprise',surface).inc();if(useful===false)aiNotUsefulTotal.labels(tenant_id||'enterprise',surface).inc();res.json({ok:true});});}